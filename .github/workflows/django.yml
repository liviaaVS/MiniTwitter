name: Django CI

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready -h localhost -p 5432 -U postgres
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Check PostgreSQL service logs (for troubleshooting)
        run: |
          docker logs $(docker ps -q --filter "ancestor=postgres:17-alpine") || true

      - name: Wait for PostgreSQL to be ready
        run: |
          max_retries=30  # Define o número máximo de tentativas
          count=0
          until pg_isready -h postgres -p 5432 -U postgres || [ $count -ge $max_retries ]; do
            echo "Waiting for PostgreSQL to be ready... Attempt $((count+1))/$max_retries"
            sleep 5
            count=$((count+1))
          done
          if [ $count -ge $max_retries ]; then
            echo "PostgreSQL failed to start after $max_retries attempts"
            exit 1  # Forçar falha se não conseguir conectar
          fi

      - name: Run migrations
        env:
          DJANGO_SETTINGS_MODULE: cacatalks.settings
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          DB_HOST: postgres
          DB_NAME: github_actions
          DB_USER: postgres
          DB_PASSWORD: postgres
        run: |
          python manage.py migrate

      - name: Run tests
        env:
          DJANGO_SETTINGS_MODULE: cacatalks.settings
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          DB_HOST: postgres
          DB_NAME: github_actions
          DB_USER: postgres
          DB_PASSWORD: postgres
        run: |
          python manage.py test
